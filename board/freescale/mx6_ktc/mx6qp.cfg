/*
 * Copyright (C) 2015 Freescale Semiconductor, Inc.
 *
 * SPDX-License-Identifier:	GPL-2.0+
 *
 * Refer doc/README.imximage for more details about how-to configure
 * and create imximage boot image
 *
 * The syntax is taken as close as possible with the kwbimage
 */

#define __ASSEMBLY__
#include <config.h>
/* image version */
IMAGE_VERSION 2

/*
 * Boot Device : one of spi, sd, sata
 * the board has no nand and eimnor
 * spinor: flash_offset: 0x0400
 * sata:   flash_offset: 0x0400
 * sd/mmc: flash_offset: 0x0400
 */

/* the same flash_offset as sd */
BOOT_FROM      sd

#ifdef CONFIG_USE_PLUGIN
/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
PLUGIN	board/freescale/mx6sabresd/plugin.bin 0x00907000
#else

#ifdef CONFIG_SECURE_BOOT
CSF CONFIG_CSF_SIZE
#endif

/*
 * Device Configuration Data (DCD)
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *      Addr-type register length (1,2 or 4 bytes)
 *      Address   absolute address of the register
 *      value     value to be stored in the register
 */
/* set the default clock gate to save power */
//****************************
// Clock Control Module(CCM) *
//****************************
// Start from : 0x020c 4000 ~ 0x020c 7fff (16kb)
// TODO : enable all the clock 
DATA 4 0x020c4068 0xFFFFFFFF	// CCM Clock Gating Register 0
DATA 4 0x020c406c 0xFFFFFFFF	// CCM Clock Gating Register 1
DATA 4 0x020c4070 0xFFFFFFFF	// CCM Clock Gating Register 2
DATA 4 0x020c4074 0xFFFFFFFF	// CCM Clock Gating Register 3
DATA 4 0x020c4078 0xFFFFFFFF	// CCM Clock Gating Register 4
DATA 4 0x020c407c 0xFFFFFFFF	// CCM Clock Gating Register 5
DATA 4 0x020c4080 0xFFFFFFFF	// CCM Clock Gating Register 6

// CCM Control Register (CCM_CCR)
//DATA 4, 0x020c4000, 0x040110ff
// CCM Bus Clock Multiplexer Register(CCM_CBCMR)
DATA 4 0x020c4018 0x00060324 // Set to 396 MHz PLL2 PFD [19:18]
// CCM Bus Clock Divider Register (CMM_CBCDR)
//DATA 4, 0x020c4014, 0x05018d00 // Set ch0/ch1 mmdc_ch#_axi_clk_root [26:25]

// Memory Map / Register Definition
// Setting Global programmer view(GPV)
//DATA 4, 0x00b00000 0x1 // Switch NIC-301_FAST2(Main DDR Arbitration) to DDR Dual-channel mapping

//**************************
// IO Mux Control (IOMUXC) *
//**************************
// General Purpose  Register (IOMUXC_GPR)[13:0] Used to select operating modes
// Pad Mux Register (IOMUXC_SW_MUX_CTL_PAD_<NAME>) configuring IOMUX muxing
// 	Configure 1 of 8 alternate(ALT) MUX_MODE 
// Pad Control Register (IOMUXC_SW_PAD_CTL_PAD_<NAME>)  setting of each pad
// Pad Group Control Register (IOMUXC_SW_PAD_CTL_GRP_<NAME>) predefined group of pad
// DDR IO Type
DATA 4 0x020e0798 0x00080000	// IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE[19:18] set ddr select
DATA 4 0x020e0758 0x00000000	// IOMUXC_SW_PAD_CTL_GRP_DDRPKE[12] set Pull/Keep disable

// Set DDR_SEL[19:18], DDR_INPUT[17], HYS[16], PUS[15:14], PUE[13], PKE[12], ODT[10:8], DSE[5:3]
// Most part like DDR_SEL, DDR_INPUT etc. can be covered by DDR IO TYPE setting.
// DDR CLOCK PIN
DATA 4 0x020e0588 0x00000030 	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK0_P disable ODT, set drive strength
DATA 4 0x020e0594 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK1_P disable ODT, set drive strength

// DDR ADDRESS PIN
DATA 4 0x020e056c 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS_B disable ODT, set drive strength
DATA 4 0x020e0578 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS_B disable ODT, set drive strength
DATA 4 0x020e074c 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_ADDDS set drive strength of address

// DDR CONTROL PIN
DATA 4 0x020e057c 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET disable ODT, set drive strength
DATA 4 0x020e058c 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 
DATA 4 0x020e059c 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0 disable ODT, set drive strength
DATA 4 0x020e05a0 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1 disable ODT, set drive strength
// Use GRP to cover SDWE, SDCKE0/1, SDBA2, CS0/1 
DATA 4 0x020e078c 0x00000030   // IOMUXC_SW_PAD_CTL_GRP_CTLDS set drive strength

// DDR DATA STROBE PIN
DATA 4 0x020e05a8 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0
DATA 4 0x020e05b0 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1
DATA 4 0x020e0524 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2
DATA 4 0x020e051c 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3
//DATA 4, 0x020e0518, 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS4
//DATA 4, 0x020e050c, 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS5
//DATA 4, 0x020e05b8, 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS6
//DATA 4, 0x020e05c0, 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS7

// DDR DATA PIN
// GRP_DDRMODE effect : SDQS0~7
DATA 4 0x020e0774 0x00020000   // IOMUXC_SW_PAD_CTL_GRP_DDRMODE
// B0DS coverd : DATA00~07
DATA 4 0x020e0784 0x00000038   // IOMUXC_SW_PAD_CTL_GRP_B0DS
// B1DS coverd : DATA08~15
DATA 4 0x020e0788 0x00000038   // IOMUXC_SW_PAD_CTL_GRP_B1DS
// B2DS coverd : DATA16~23
DATA 4 0x020e0794 0x00000038   // IOMUXC_SW_PAD_CTL_GRP_B2DS
// B3DS coverd : DATA24~31
DATA 4 0x020e079c 0x00000038   // IOMUXC_SW_PAD_CTL_GRP_B3DS


DATA 4 0x020e05ac 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
DATA 4 0x020e05b4 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1
DATA 4 0x020e0528 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2
DATA 4 0x020e0520 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3
//DATA 4, 0x020e0514, 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM4
//DATA 4, 0x020e0510, 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM5
//DATA 4, 0x020e05bc, 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM6
//DATA 4, 0x020e05c4, 0x00003038   // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM7

DATA 4 0x020e0750 0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODECTL

//***********************************
// Multi Mode DDR Controller (MMDC) *
//***********************************
// DRAM INFORMATION
//-----+--------+--------------+-------+-------+-------+-------+-------+-------+-------+-----------+
//	Manuf	 Part Number
//-----+--------+--------------+-------+-------+-------+-------+-------+-------+-------+-----------+
//	Kingston LP2-8Gb-1066 	400MHz	MMDC0	4	2	8	14	10	32
//-----+--------+--------------+-------+-------+-------+-------+-------+-------+-------+-----------+
// MMDC Initialized (Spec page 3818)
// MMDC1 : 0x021b0000 | MMDC2 : 0x021b4000

// MMDC Core Spectial Command Register (MDSCR)
DATA 4 0x021b001c 0x00008000	// MMDC1_MDSCR, set Configuration request bit during MMDC setup [8]
//DATA 4, 0x201b401c, 0x00008000	// MMDC2_MDSCR

// MMDC ZQ LPDDR2 HW Control Register
// Calibration Long(ZQCS)[30:24] Calibration Short(ZQCL)[23:16] ZQINIT[8:0]
DATA 4 0x021b085c 0x1b5f0107	// MMDC0_MPZQLP2CTL 
//DATA 4, 0x021b485c, 0x1b5f0107	// MMDC1_MPZQLP2CTL

//********************
// Calibration setup *
//********************
// ZQ Calibation
DATA 4 0x021b0800 0xa1390003	// DDR_PHY_P0_MPZQHWCTRL enable QZ Automatic calibration[16]
//DATA 4, 0x021b4800, 0xa1390003	// DDR_PHY_P1_MPZQHWCTRL

// CA Bus Bit Delay calibration
DATA 4 0x021b0890 0x00400000	// MMDC0_MPPDCMPR2 Absolute CA of LPDDR2 offset
//DATA 4, 0x021b4890, 0x00400000   // MMDC1_...

DATA 4 0x021b08b8 0x00000800 // frc_msr

// Write Leveling 
// Not available for LPDDR2

// Read Data DQS Calibration
// PHY Read Delay-lines Configuration Register
DATA 4 0x021b0848 0x24282826	// MMDC0_MPRDDLCTL  

// Write Data DQS Calibration
// PHY Write Delay-lines Configuration Register
DATA 4 0x021c0850 0x2428302a	// MMDC0_MPWDDLCTL

// DQS Gating
DATA 4 0x021b083c 0x20000000	// PHY Read DQS Gating Control Register, Disabled read gating[29] MPRDDQBY0DL
DATA 4 0x021b0840 0x00000000

// Read Data Bit Delay
// MMDC PHY Read DQ Byte # Delay Register
DATA 4 0x021b081c 0x00000000	// MPRDDQBY0DL DQ0~7	from 0 delay~7 delay units
DATA 4 0x021b0820 0x44444444	// MPRDDQBY0DL DQ8~15
DATA 4 0x021b0824 0x66666666	// MPRDDQBY0DL DQ16~23
DATA 4 0x021b0828 0x00000000	// MPRDDQBY0DL DQ24~31

// Write Data Bit Delay
// MMDC PHY Write DQ Byte # Delay Register
DATA 4 0x021b082c 0xF3333333   // MPWRDQBY0DL DQ0~7    from 0 delay~7 delay units
DATA 4 0x021b0830 0xE2222222   // MPWRDQBY0DL DQ8~15
DATA 4 0x021b0834 0xF3333333   // MPWRDQBY0DL DQ16~23
DATA 4 0x021b0838 0xF3333333   // MPWRDQBY0DL DQ24~31

// Complete Calibration by Force Measurement
DATA 4 0x021b08b8 0x00000800	// Measure Unit Register, force measurement[11]

//*********************
// MMDC Configuration *
//*********************
// Channel 0
// Core Power Down Ctrl Register(MDPDC), tCKE[18:16]=2, tCKSRX[5:3]=6, tCKSRE[2:0]=6 
DATA 4 0x021b0004 0x00020036
// Core ODT Timing Ctrl Register
DATA 4 0x021b0008 0x00000000
// Core Timing Configuration (MDCFG0) tRFC[31:24], tXS[23:16], tXP[15:13], tXPDLL[12:9], tFAW[8:4], tCL[3:0:0]
DATA 4 0x021b000c 0x454a61a5
// Core Timing Configuration (MDCFG1) tRCD[31:29], tRP[28:26], tRC[25:21], tRAS[20:16], tRPA[15], tWR[11:9], tMRD[8:5], tCWL[2:0]
DATA 4 0x021b0010 0x00120e83
// Core Timing Configuration (MDCFG2) tDLLK[24:16], tRTP[8:6], tWTR[5:3], tRRD[2:0]
DATA 4 0x021b0014 0x000000dc

DATA 4 0x021b0018 0x00001748	// MMDC0_MDMISC
//DATA 4, 0x021b001c, 0x00008000	// MMDC0_MDSCR Sepecial Command Register
DATA 4 0x021b002c 0x0F9F26D2	// MMDC0_MDRWD Read/Wirte Command Delay Register
DATA 4 0x021b0030 0x00000010	// MMDC0_MDOR Out of Reset Delay Register
DATA 4 0x021b0038 0x00190678	// MMDC0_MDCFG3LP Core Timing Configurateon Register 3
DATA 4 0x021b0040 0x00000017	// MMDC0_MDASP Core Address Space Partition Register
DATA 4 0x021b0400 0x11420000	// MMDC0_MAARCR Core AXI Recording Control Register
DATA 4 0x021b0000 0x83110000	// MMDC0_MDCTL Core Ctrl Reg, Set row,col number and burst length etc

// Configure DDR Device (Channel 0)
DATA 4 0x021b001c 0x003f8030	// MRW: BA=0 CS=0 MR_ADDR=63 MR_OP=0
DATA 4 0x021b001c 0xff0a8030	// MRW: BA=0 CS=0 MR_ADDR=10 MR_OP=ff
DATA 4 0x021b001c 0xc2018030  // MRW: BA=0 CS=0 MR_ADDR=1 MR_OP=c2
DATA 4 0x021b001c 0x05028030  // MRW: BA=0 CS=0 MR_ADDR=2 MR_OP=6, tcl=8, tcwl=4
DATA 4 0x021b001c 0x02038030  // MRW: BA=0 CS=0 MR_ADDR=3 MR_OP=2, drive=240/6

DATA 4 0x021b001c 0x003f8038  // MRW: BA=0 CS=1 MR_ADDR=63 MR_OP=0
DATA 4 0x021b001c 0xff0a8038  // MRW: BA=0 CS=1 MR_ADDR=63 MR_OP=0
DATA 4 0x021b001c 0xc2018038  // MRW: BA=0 CS=1 MR_ADDR=63 MR_OP=0
DATA 4 0x021b001c 0x05028038  // MRW: BA=0 CS=1 MR_ADDR=63 MR_OP=0
DATA 4 0x021b001c 0x02038038  // MRW: BA=0 CS=1 MR_ADDR=63 MR_OP=0

DATA 4 0x021b0800 0xa1390003	// MMDC0_MPZQHWCTRL, ZQ mode[1:0] enabled both one-time and periodic HW ZQ Calibration
DATA 4 0x021b0020 0x00001800	// MMDC0_MDREF , REF_SEL[15:14], REFR[13:11] refresh rate
DATA 4 0x021b0818 0x00000000	// DDR_PHY_P0_MPODTCTRL
DATA 4 0x021b0004 0x00025576	// MMDC0_MDPDC, SDCTL power down enabled
DATA 4 0x021b0404 0x00011006	// MMDC0_MAPSR, pwr down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.
DATA 4 0x021b001c 0x00000000 	// MMDC0_MDSCR, clear the register, 

/* set the default clock gate to save power */
DATA 4, 0x020c4068, 0x00C03F3F
DATA 4, 0x020c406c, 0x0030FC03
DATA 4, 0x020c4070, 0x0FFFC000
DATA 4, 0x020c4074, 0x3FF00000
DATA 4, 0x020c4078, 0x00FFF300
DATA 4, 0x020c407c, 0x0F0000F3
DATA 4, 0x020c4080, 0x000003FF

/* enable AXI cache for VDOA/VPU/IPU */
DATA 4, 0x020e0010, 0xF00000CF
/* set IPU AXI-id1 Qos=0x1 AXI-id0/2/3 Qos=0x7 */
DATA 4, 0x020e0018, 0x77177717
DATA 4, 0x020e001c, 0x77177717
#endif
